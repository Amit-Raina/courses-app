{"version":3,"sources":["Constants/index.js","Reusable_Component/Header/Header.js","Component/AddCourse/AddCourse.js","Actions/index.js","Reusable_Component/ContentTile/ContentTile.js","Component/CoursesScreen/CoursesScreen.js","Component/EditCourse/EditCourse.js","App.js","reportWebVitals.js","Reducers/index.js","Store/index.js","index.js"],"names":["ADDNEWCOURSE","EDITCOURSE","SELECTEDID","Header","className","to","style","textDecoration","AddCourse","state","isEmpty","title","author","category","length","redirect","getTitle","value","setState","getAuthor","getCategory","getlength","clearValues","checkValidity","alert","submitData","props","addCourse","id","CourseDetails","required","type","this","placeholder","onChange","event","target","name","onClick","aria-hidden","Component","connect","dispatch","courseData","payload","ContentTile","currentSelected","backgroundColor","checked","color","CoursesScreen","currentlyOn","cellSpacing","map","data","index","setTimeout","getCourseId","courseId","EditCourse","selectedId","submitValues","editCourse","defaultValue","selectedToUpdate","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","newCourseDetails","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6daa8e8.chunk.js","sourcesContent":["export const ADDNEWCOURSE = \"ADDNEWCOURSE\";\r\nexport const EDITCOURSE = \"EDITCOURSE\";\r\nexport const SELECTEDID = \"SELECTEDID\";","import { Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"main-header\">\r\n        <div className=\"header-text\">\r\n          <div className=\"text\">\r\n            <p className=\"text-home\">Home</p>\r\n            <NavLink to=\"/\" style={{textDecoration:\"none\"}}> <p className=\"text-courses\">Courses</p> </NavLink>\r\n            <p className=\"text-about\">About</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { addCourse } from \"../../Actions\";\r\nimport Header from \"../../Reusable_Component/Header/Header\";\r\nimport \"./AddCourse.css\";\r\n\r\nclass AddCourse extends Component {\r\n  state = {\r\n    isEmpty: true,\r\n    title: \"\",\r\n    author: \"\",\r\n    category: \"\",\r\n    length: \"\",\r\n    redirect:\"/add-course\"\r\n  };\r\n\r\n  getTitle = (value) => {\r\n    this.setState({\r\n      title: value,\r\n      isEmpty: value.length === 0,\r\n    });\r\n  };\r\n\r\n  getAuthor = (value) => {\r\n    this.setState({\r\n      author: value,\r\n      isEmpty: value.length === 0,\r\n    });\r\n  };\r\n\r\n  getCategory = (value) => {\r\n    this.setState({\r\n      category: value,\r\n      isEmpty: value.length === 0,\r\n    });\r\n  };\r\n\r\n  getlength = (value) => {\r\n    this.setState({\r\n      length: value,\r\n      isEmpty: value.length === 0,\r\n    });\r\n  };\r\n\r\n  clearValues = () => {\r\n    this.setState({\r\n      isEmpty: true,\r\n      title: \"\",\r\n      author: \"\",\r\n      category: \"\",\r\n      length: \"\",\r\n    });\r\n  };\r\n\r\n  checkValidity = () => {\r\n    if (this.state.title.length === 0) {\r\n      alert(\"Enter Title\");\r\n      return false;\r\n    }\r\n    if (this.state.author.length === 0) {\r\n      alert(\"Enter Author\");\r\n      return false;\r\n    }\r\n    if (this.state.category.length === 0) {\r\n      alert(\"Enter Category\");\r\n      return false;\r\n    }\r\n    if (this.state.length.length === 0) {\r\n      alert(\"Enter Length\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  submitData = () => {\r\n    if (this.checkValidity()) {\r\n      this.props.addCourse({\r\n        id: this.props.CourseDetails.length + 1,\r\n        title: this.state.title,\r\n        length: this.state.length,\r\n        category: this.state.category,\r\n        author: this.state.author,\r\n      });\r\n        this.setState({\r\n          redirect:\"/\"\r\n        })\r\n    \r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Header />\r\n        <div className=\"content-body-add-course\">\r\n          <div className=\"add-title\">\r\n            <h1>Add</h1>\r\n          </div>\r\n          <div className=\"fields\">\r\n            <p>Title</p>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={this.state.title}\r\n              placeholder=\"Title of the course\"\r\n              onChange={(event) => {\r\n                this.getTitle(event.target.value);\r\n              }}\r\n            />\r\n\r\n            <p>Author</p>\r\n            <select\r\n              required\r\n              name=\"author\"\r\n              value={this.state.author}\r\n              onChange={(event) => {\r\n                this.getAuthor(event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"cory-house\" >Cory House</option>\r\n              <option value=\"scott-allen\">Scott Allen</option>\r\n              <option value=\"dan-wahlin\">Dan Wahlin</option>\r\n            </select>\r\n\r\n            <p>Category</p>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={this.state.category}\r\n              placeholder=\"Category of the course\"\r\n              onChange={(event) => {\r\n                this.getCategory(event.target.value);\r\n              }}\r\n            />\r\n\r\n            <p>Length</p>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={this.state.length}\r\n              placeholder=\"Length of course in minutes or hours\"\r\n              onChange={(event) => {\r\n                this.getlength(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <br></br>\r\n          <div className=\"buttons\">\r\n            <Redirect to={this.state.redirect}></Redirect>\r\n            <span className=\"button-submit\" onClick={this.submitData}>\r\n              <i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i> Submit\r\n            </span>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span\r\n              className={\r\n                this.state.isEmpty\r\n                  ? \"button-clear-values-inactive\"\r\n                  : \"button-clear-values-active\"\r\n              }\r\n              onClick={() => {\r\n                this.clearValues();\r\n              }}\r\n            >\r\n              Clear Values\r\n            </span>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span className=\"button-cancel\" onClick={()=>{this.setState({redirect:\"/\"})}}>Cancel</span>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    CourseDetails: state.CourseDetails,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addCourse: (courseData) => {\r\n      dispatch(addCourse(courseData));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCourse);\r\n","import { ADDNEWCOURSE, SELECTEDID ,EDITCOURSE } from \"../Constants\";\r\n\r\n\r\n   export const addCourse = (courseData) => {\r\n        return {\r\n            type:ADDNEWCOURSE,\r\n            payload:courseData\r\n        }\r\n    }\r\n    export const getCourseId = (id) => {\r\n        return {\r\n            type:SELECTEDID,\r\n            payload:id\r\n        }\r\n    }\r\n\r\n    export const editCourse = (courseData , id) => {\r\n        return {\r\n            type:EDITCOURSE,\r\n            payload:courseData,\r\n            id:id\r\n        }\r\n    }\r\n","import { Fragment } from \"react\";\r\nimport \"./ContentTile.css\"\r\n\r\nconst ContentTile = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <tr className = \"content-detail\" onClick={props.currentSelected} style={{backgroundColor: props.checked ? \"rgb(193,242,145)\" : \"\"}}>\r\n        <td className=\"course-title\" style={{color: \"rgb(2,131,223)\"}}>\r\n          {props.title}\r\n        </td>\r\n        <td>{props.length}</td>\r\n        <td>{props.category}</td>\r\n        <td>{props.author}</td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ContentTile;\r\n","import { Component, Fragment } from \"react\";\r\nimport \"./CoursesScreen.css\";\r\nimport Header from \"../../Reusable_Component/Header/Header\";\r\nimport ContentTile from \"../../Reusable_Component/ContentTile/ContentTile\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getCourseId } from \"../../Actions\";\r\n\r\nclass CoursesScreen extends Component {\r\n  state = {\r\n    currentlyOn: null,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Header />\r\n        <div className=\"content-body\">\r\n          <div className=\"title\">\r\n            <h1>Courses</h1>\r\n          </div>\r\n          <div className=\"options-bar\">\r\n            <NavLink to=\"/add-course\" style={{ textDecoration: \"none\" }}>\r\n              <div className=\"options-bar-new\">\r\n                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> New\r\n              </div>\r\n            </NavLink>\r\n            &nbsp;&nbsp;\r\n            <NavLink to={this.state.currentlyOn === null ? \"\" :\"/edit-course\"} style={{ textDecoration: \"none\" }}>\r\n              <div className=\"options-bar-edit\">\r\n                <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i> Edit\r\n              </div>\r\n            </NavLink>\r\n            &nbsp;&nbsp;\r\n            <div className=\"options-bar-delete\">\r\n              <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\r\n            </div>\r\n          </div>\r\n          <div className=\"course-details\">\r\n            <table className=\"table-structure\" cellSpacing=\"0\">\r\n              <thead>\r\n                <tr className=\"table-header\">\r\n                  <th>\r\n                    Title <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                  </th>\r\n                  <th>\r\n                    Length <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                  </th>\r\n                  <th>\r\n                    Category <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                  </th>\r\n                  <th>\r\n                    Author <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.CourseDetails.map((data, index) => {\r\n                  return (\r\n                    <ContentTile\r\n                      id={data.id}\r\n                      key={data.id}\r\n                      title={data.title}\r\n                      length={data.length}\r\n                      category={data.category}\r\n                      author={data.author}\r\n                      checked={this.state.currentlyOn === data.id}\r\n                      currentSelected={() => {\r\n                        if(this.state.currentlyOn === data.id){\r\n                        this.setState({currentlyOn:null});\r\n                        setTimeout(()=>{this.props.getCourseId(this.state.currentlyOn)},500)\r\n                        \r\n                        }\r\n                        else{\r\n                        this.setState({ currentlyOn: data.id });\r\n                        setTimeout(()=>{this.props.getCourseId(this.state.currentlyOn)},500)\r\n                        }\r\n                      }}\r\n                    />\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    CourseDetails: state.CourseDetails,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCourseId: (courseId) => {\r\n      dispatch(getCourseId(courseId));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CoursesScreen);\r\n","import { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { editCourse } from \"../../Actions\";\r\nimport Header from \"../../Reusable_Component/Header/Header\";\r\nimport \"../AddCourse/AddCourse.css\";\r\n\r\nclass EditCourse extends Component {\r\n  state = {\r\n    title: this.props.CourseDetails[this.props.selectedId - 1 ].title,\r\n    author: this.props.CourseDetails[this.props.selectedId - 1 ].author,\r\n    category:this.props.CourseDetails[this.props.selectedId - 1 ].category,\r\n    length:this.props.CourseDetails[this.props.selectedId - 1 ].length,\r\n    redirect:\"/edit-course\"\r\n  };\r\n\r\n  getTitle = (value) => {\r\n    this.setState({\r\n      title: value,\r\n    });\r\n    \r\n  };\r\n\r\n  getAuthor = (value) => {\r\n    this.setState({\r\n      author: value,\r\n    });\r\n  };\r\n\r\n  getCategory = (value) => {\r\n    this.setState({\r\n      category: value,\r\n    });\r\n  };\r\n\r\n  getlength = (value) => {\r\n    this.setState({\r\n      length: value,\r\n    });\r\n  };\r\n\r\n  clearValues= () =>{\r\n      this.setState({\r\n        isEmpty: true,\r\n        title: \"\",\r\n        author: \"\",\r\n        category: \"\",\r\n        length: \"\",\r\n      })\r\n  }\r\n\r\n  checkValidity = () => {\r\n    if (this.state.title.length === 0) {\r\n      alert(\"Enter Title\");\r\n      return false;\r\n    }\r\n    if (this.state.author.length === 0) {\r\n      alert(\"Enter Author\");\r\n      return false;\r\n    }\r\n    if (this.state.category.length === 0) {\r\n      alert(\"Enter Category\");\r\n      return false;\r\n    }\r\n    if (this.state.length.length === 0) {\r\n      alert(\"Enter Length\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  submitValues = () =>{\r\n    if (this.checkValidity()) {\r\n      this.props.editCourse({\r\n        id: this.props.selectedId,\r\n        title: this.state.title,\r\n        length: this.state.length,\r\n        category: this.state.category,\r\n        author: this.state.author,\r\n      },this.props.selectedId);\r\n\r\n      this.setState({\r\n        redirect:\"/\"\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Header />\r\n        <div className=\"content-body-add-course\">\r\n          <div className=\"add-title\">\r\n            <h1>Edit</h1>\r\n          </div>\r\n          <div className=\"fields\">\r\n            <p>Title</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.title}\r\n              placeholder=\"Title of the course\"\r\n              onChange={(event) => {\r\n                this.getTitle(event.target.value);\r\n              }}\r\n            />\r\n\r\n            <p>Author</p>\r\n            <select\r\n              name=\"author\"\r\n              \r\n              defaultValue={this.state.author}\r\n              onChange={(event) => {\r\n                this.getAuthor(event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"cory-house\" >Cory House</option>\r\n              <option value=\"scott-allen\">Scott Allen</option>\r\n              <option value=\"dan-wahlin\">Dan Wahlin</option>\r\n            </select>\r\n\r\n            <p>Category</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.category}\r\n              placeholder=\"Category of the course\"\r\n              onChange={(event) => {\r\n                this.getCategory(event.target.value);\r\n              }}\r\n            />\r\n\r\n            <p>Length</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.length}\r\n              placeholder=\"Length of course in minutes or hours\"\r\n              onChange={(event) => {\r\n                this.getlength(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <br></br>\r\n          <div className=\"buttons\">\r\n            <span className=\"button-submit\" onClick={this.submitValues}>\r\n            <Redirect to={this.state.redirect}></Redirect>\r\n              <i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i> Submit\r\n            </span>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span className=\"button-cancel\" onClick={()=>{this.setState({redirect:\"/\"})}}>Cancel</span>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    CourseDetails: state.CourseDetails,\r\n    selectedId : state.selectedToUpdate\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editCourse: (courseData,id) => {\r\n      dispatch(editCourse(courseData,id));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(EditCourse);\r\n","import { Component, Fragment } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport \"./App.css\";\nimport AddCourse from \"./Component/AddCourse/AddCourse\";\nimport CoursesScreen from \"./Component/CoursesScreen/CoursesScreen\";\nimport EditCourse from \"./Component/EditCourse/EditCourse\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n\n        <Switch>\n        <Route path=\"/add-course\" exact component={AddCourse}/>\n        <Route path=\"/edit-course\" exact component={EditCourse}/>\n        <Route path=\"/\" exact component={CoursesScreen}/>\n        </Switch>\n\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADDNEWCOURSE, EDITCOURSE, SELECTEDID } from \"../Constants\";\r\n\r\nconst initialState = {\r\n  CourseDetails: [\r\n    {\r\n      id: 1,\r\n      title: \"Building Applications in React and Flux\",\r\n      length: \"5:08\",\r\n      category: \"JavaScript\",\r\n      author: \"cory-house\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Clean Code: Writing Code for Humans\",\r\n      length: \"3:10\",\r\n      category: \"Software Practices\",\r\n      author: \"cory-house\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Architecting Applications for the Real World\",\r\n      length: \"2:52\",\r\n      category: \"Software Architecture\",\r\n      author: \"cory-house\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Becoming an Outlier: Reprogramming the Developer Mind\",\r\n      length: \"2:30\",\r\n      category: \"Career\",\r\n      author: \"cory-house\",\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Web Component Fundamentals\",\r\n      length: \"5:10\",\r\n      category: \"HTML5\",\r\n      author: \"cory-house\",\r\n    },\r\n  ],\r\n  selectedToUpdate: null,\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADDNEWCOURSE:\r\n      return {\r\n        ...state,\r\n        CourseDetails: [...state.CourseDetails, action.payload],\r\n        selectedToUpdate:null\r\n      };\r\n    case SELECTEDID:\r\n      return { ...state, selectedToUpdate: action.payload };\r\n    case EDITCOURSE:\r\n      const newCourseDetails = state.CourseDetails.map((data) => {\r\n        if (data.id === action.id) return action.payload;\r\n        return data;\r\n      });\r\n      return { ...state, CourseDetails: newCourseDetails , selectedToUpdate:null};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n","import { createStore , compose } from \"redux\";\r\nimport rootReducer from \"../Reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose;\r\n\r\nconst store = createStore(rootReducer,composeEnhancers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './Store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}